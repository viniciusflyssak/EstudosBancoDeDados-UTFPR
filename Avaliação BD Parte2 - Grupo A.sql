CREATE TABLE PAIS (CODIGO_PAIS SERIAL CONSTRAINT PK_CODIGO_PAIS PRIMARY KEY NOT NULL,
				   NOME_PAIS VARCHAR (100) CONSTRAINT NNNOME_PAIS NOT NULL);
				   
CREATE TABLE SALA (NUMERO_SALA SERIAL CONSTRAINT PK_NUMERO_SALA PRIMARY KEY NOT NULL, 
				   DESCRICAO_SALA VARCHAR (200) CONSTRAINT NNDESCRICAO_SALA NOT NULL, 
				   CAPACIDADE INTEGER CONSTRAINT NNCAPACIDADE NOT NULL);				   

CREATE TABLE DIRETOR (CODIGO_DIRETOR SERIAL CONSTRAINT PK_CODIGO_DIRETOR PRIMARY KEY NOT NULL,
					  NOME_DIRETOR VARCHAR (70) CONSTRAINT NNNOME_DIRETOR NOT NULL, 
					  NACIONALIDADE INT CONSTRAINT NNNACIONALIDADE NOT NULL,
					  CONSTRAINT FK_DIRETOR_PAIS FOREIGN KEY (NACIONALIDADE) REFERENCES PAIS(CODIGO_PAIS));

CREATE TABLE FILME (CODIGO_FILME SERIAL CONSTRAINT PK_CODIGO_FILME PRIMARY KEY NOT NULL,
				   	NOME_FILME VARCHAR (70) CONSTRAINT NNNOME_FILME NOT NULL,
				   	ANO_LANCAMENTO INTEGER CONSTRAINT NNANO_LANCAMENTO NOT NULL,
				    CATEGORIA_FILME VARCHAR (20) CONSTRAINT NNCATEGORIA_FILME NOT NULL, 
				   	CODIGO_DIRETOR INT CONSTRAINT NNCODIGO_DIRETOR NOT NULL,
				   	CODIGO_PAIS INT CONSTRAINT NNCODIGO_PAIS NOT NULL, 
				   	CONSTRAINT FK_FILME_DIRETOR FOREIGN KEY (CODIGO_DIRETOR) REFERENCES DIRETOR(CODIGO_DIRETOR), 
				   	CONSTRAINT FK_FILME_PAIS FOREIGN KEY (CODIGO_PAIS) REFERENCES PAIS(CODIGO_PAIS));
					
CREATE TABLE PREMIO (CODIGO_PREMIO SERIAL CONSTRAINT PK_CODIGO_PREMIO PRIMARY KEY NOT NULL,
					 NOME_PREMIO VARCHAR (50) CONSTRAINT NNNOME_PREMIO NOT NULL, 
					 ANO_PREMIACAO INTEGER CONSTRAINT NNANO_PREMIACAO NOT NULL,
					 CODIGO_FILME INT CONSTRAINT NNCODIGO_FILME NOT NULL,
					 CONSTRAINT FK_PREMIO_FILME FOREIGN KEY (CODIGO_FILME) REFERENCES FILME(CODIGO_FILME));

CREATE TABLE SALA_FILME (NUMERO_SALA INT CONSTRAINT NNNUMERO_SALA NOT NULL,
						 CODIGO_FILME INT CONSTRAINT NNCODIGO_FILME NOT NULL,
						 DATA DATE CONSTRAINT NNDATA NOT NULL, 
						 HORARIO TIME CONSTRAINT NNHORARIO NOT NULL,
						 CONSTRAINT PK_NUMERO_SALA_CODIGO_FILME PRIMARY KEY(NUMERO_SALA, CODIGO_FILME),
						 CONSTRAINT FK_SALA_FILME_SALA FOREIGN KEY (NUMERO_SALA) REFERENCES SALA(NUMERO_SALA),								  
						 CONSTRAINT FK_SALA_FILME_FILME FOREIGN KEY (CODIGO_FILME) REFERENCES FILME(CODIGO_FILME));	
						 
						 
SELECT SUM(CAPACIDADE) AS TOTALDELUGARES FROM SALA;

SELECT FILME.NOME_FILME, PREMIO.NOME_PREMIO, PREMIO.ANO_PREMIACAO, DIRETOR.NOME_DIRETOR, PAIS.NOME_PAIS FROM FILME 
INNER JOIN PREMIO ON PREMIO.CODIGO_FILME = FILME.CODIGO_FILME
INNER JOIN DIRETOR ON DIRETOR.CODIGO_DIRETOR = FILME.CODIGO_DIRETOR
INNER JOIN PAIS ON PAIS.CODIGO_PAIS = DIRETOR.NACIONALIDADE
ORDER BY PREMIO.ANO_PREMIACAO;

SELECT COUNT(FILME.CODIGO_FILME) AS QUANTIDADE_FILMES, DIRETOR.NOME_DIRETOR FROM DIRETOR
INNER JOIN FILME ON FILME.CODIGO_DIRETOR = DIRETOR.CODIGO_DIRETOR
GROUP BY DIRETOR.NOME_DIRETOR;

SELECT FILME.NOME_FILME, FILME.ANO_LANCAMENTO, DIRETOR.NOME_DIRETOR, SALA_FILME.DATA, SALA_FILME.HORARIO FROM FILME 
INNER JOIN DIRETOR ON DIRETOR.CODIGO_DIRETOR = FILME.CODIGO_DIRETOR
INNER JOIN SALA_FILME ON SALA_FILME.CODIGO_FILME = FILME.CODIGO_FILME
WHERE DIRETOR.NACIONALIDADE = 1; --Caso o código da frança seja 1

SELECT CONCAT('Nome filme: ', FILME.NOME_FILME, ' Código filme: ', FILME.CODIGO_FILME, ' Data exibição: ', FILME.ANO_LANCAMENTO, 
			  ' Diretor: ', DIRETOR.NOME_DIRETOR, ' Data: ', SALA_FILME.DATA, ' Horario: ', SALA_FILME.HORARIO, ' Pais: ', PAIS.NOME_PAIS)
FROM FILME
INNER JOIN DIRETOR ON DIRETOR.CODIGO_DIRETOR = FILME.CODIGO_DIRETOR
INNER JOIN SALA_FILME ON SALA_FILME.CODIGO_FILME = FILME.CODIGO_FILME
INNER JOIN PAIS ON PAIS.CODIGO_PAIS = DIRETOR.NACIONALIDADE
INNER JOIN PREMIO ON PREMIO.CODIGO_FILME = FILME.CODIGO_FILME
WHERE PREMIO.ANO_PREMIACAO < 2000;

						 